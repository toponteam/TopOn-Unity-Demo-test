// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.4'
        **BUILD_SCRIPT_DEPS**}
}

allprojects {
    repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
}


([rootProject] + (rootProject.subprojects as List)).each {
    ext {
        it.setProperty("android.useAndroidX", true)
        it.setProperty("android.enableJetifier", true)
    }
}


// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:///**DIR_UNITYPROJECT**/$.replace("\\", "/")
        maven {
            url "https://maven.google.com"
        }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
}
// Android Resolver Repos End
apply plugin: 'com.android.library'
**APPLY_PLUGINS**

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
// Android Resolver Dependencies Start
            implementation 'com.android.support:appcompat-v7:28.0.0' // Assets/AnyThinkAds/Plugins/Android/China/Editor/Dependencies.xml:3
            implementation 'com.android.support:design:28.0.0' // Assets/AnyThinkAds/Plugins/Android/China/mediation/kuaishou/Editor/Dependencies.xml:3
// Android Resolver Dependencies End
            **DEPS**}

// Android Resolver Exclusions Start
android {
    packagingOptions {
        exclude ('/lib/arm64-v8a/*' + '*')
        exclude ('/lib/armeabi/*' + '*')
        exclude ('/lib/mips/*' + '*')
        exclude ('/lib/mips64/*' + '*')
        exclude ('/lib/x86/*' + '*')
        exclude ('/lib/x86_64/*' + '*')
    }
}
// Android Resolver Exclusions End
android {
    compileSdkVersion **APIVERSION**
            buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
                minSdkVersion **MINSDKVERSION**
                targetSdkVersion **TARGETSDKVERSION**

                ndk {
                    abiFilters **ABIFILTERS**
                }
        versionCode **VERSIONCODE**
                versionName '**VERSIONNAME**'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
    }**SIGN**

            buildTypes {
                debug {
                    minifyEnabled **MINIFY_DEBUG**
                            useProguard **PROGUARD_DEBUG**
                            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
                            jniDebuggable true
                }
                release {
                    minifyEnabled **MINIFY_RELEASE**
                            useProguard **PROGUARD_RELEASE**
                            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
                }
            }**PACKAGING_OPTIONS**
            **BUILT_APK_LOCATION**

}**REPOSITORIES****SOURCE_BUILD_SETUP**
